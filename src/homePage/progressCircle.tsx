import React from 'react';

export interface IProps {
  size?: number;
  progress?: number;
  children?: any;
}

// const treeStates = {
//   0: {

const ProgressCircle = (props: IProps) => {
  const size = props.size || 300;
  const progress = props.progress || 0;
  const strokeWidth = size * 0.02;
  const R = size / 2 - strokeWidth / 2;
  const r = R * 0.8;
  const dashArray = 2 * Math.PI * r;

  const pipX =
    R + r * Math.cos((progress * 2 * Math.PI) / 100) + strokeWidth / 2;
  const pipY =
    R + r * Math.sin((progress * 2 * Math.PI) / 100) + strokeWidth / 2;

  return (
    <div
      style={{
        alignSelf: 'center',
        display: 'flex',
        flex: 1,
        justifyContent: 'center',
        transform: 'rotate(-90deg)',
      }}
    >
      <svg
        width={size}
        height={size}
        viewBox={`0 0 ${size} ${size}`}
      >
        <circle
          cx={size / 2}
          cy={size / 2}
          r={r}
          fill={'#CCF8D6'}
          stroke={'#92e0ff'}
          strokeWidth={strokeWidth}
        />

        <circle
          cx={size / 2}
          cy={size / 2}
          r={r}
          fill='none'
          stroke={'#fff'}
          strokeWidth={strokeWidth}
          strokeDasharray={dashArray + ''}
          strokeDashoffset={dashArray * (1 - progress / 100) + ''}
          strokeLinecap='round'
        />

        <circle
          cx={pipX}
          cy={pipY}
          r={r / 20}
          fill={'#fff'}
          stroke={'rgba(255, 255, 255, 0.4)'}
          strokeWidth={r / 10}
        />
      </svg>
      <div
        style={{
          alignItems: 'center',
          alignSelf: 'center',
          flex: 1,
          justifyContent: 'center',
          position: 'absolute',
          transform: 'rotate(90deg)',
        }}
      >
        <svg
          width='105'
          height='145'
          viewBox='0 0 105 145'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            d='M46.5829 54H58.1585L67.5927 144.11H37L46.5829 54Z'
            fill='#93642D'
          />
          <path
            d='M46.5 54H58L63 102.5H41.5L46.5 54Z'
            fill='#714D22'
          />
          <path
            fill-rule='evenodd'
            clip-rule='evenodd'
            d='M62.2089 12.6967C64.9576 11.1455 68.1322 10.2605 71.5134 10.2605C81.985 10.2605 90.4739 18.7494 90.4739 29.2209V30.5752C90.4739 31.2869 90.4347 31.9894 90.3583 32.6807C98.2496 34.9744 104.017 42.2587 104.017 50.89V52.2443C104.017 62.4176 96.005 70.7195 85.9466 71.1843C86.4729 75.8818 85.1599 80.7786 81.8992 84.7003L81.0772 85.6891C75.5497 92.3373 66.2458 93.9944 58.8859 90.1338C58.5711 90.5928 58.2323 91.0413 57.8694 91.4778L57.0473 92.4666C50.691 100.112 39.3405 101.157 31.6953 94.8003C25.8525 89.9425 23.8648 82.1679 26.0895 75.3595C23.8763 76.2785 21.449 76.7858 18.9033 76.7858C8.54681 76.7858 0.151215 68.3902 0.151215 58.0337V56.6942C0.151215 47.6883 6.49986 40.1652 14.9659 38.3562C14.9123 37.7789 14.885 37.194 14.885 36.6027V35.2633C14.885 25.1242 22.9318 16.8645 32.9875 16.5222C34.4031 9.38797 40.697 4.0098 48.2469 4.0098C54.3727 4.0098 59.6716 7.55031 62.2089 12.6967Z'
            fill='#66A865'
          />
          <path
            fill-rule='evenodd'
            clip-rule='evenodd'
            d='M33.6937 15.3311C36.3386 8.94211 43.662 5.90696 50.051 8.55187C56.4399 11.1968 59.4751 18.5202 56.8302 24.9092L56.4881 25.7355C56.3083 26.1697 56.107 26.5884 55.8857 26.9909C60.1211 30.3835 61.8001 36.2846 59.62 41.5508L59.2779 42.3771C56.633 48.766 49.3096 51.8012 42.9206 49.1563C39.4655 47.7259 36.9912 44.9273 35.8657 41.6481C32.7518 43.1722 29.0234 43.403 25.5682 41.9727C19.1793 39.3278 16.1441 32.0044 18.7891 25.6154L19.1311 24.7891C21.4311 19.2333 27.269 16.2136 32.9537 17.2598C33.0681 16.89 33.2006 16.5221 33.3516 16.1574L33.6937 15.3311Z'
            fill='#83C082'
          />
          <path
            fill-rule='evenodd'
            clip-rule='evenodd'
            d='M2.87708 47.4639C1.0545 50.3552 0 53.7793 0 57.4497V58.7891C0 69.1456 8.3956 77.5412 18.7521 77.5412C21.2978 77.5412 23.7251 77.034 25.9382 76.115C23.7136 82.9234 25.7013 90.698 31.5441 95.5557C39.1893 101.912 50.5398 100.867 56.8961 93.222L57.7182 92.2332C58.0811 91.7968 58.4199 91.3482 58.7347 90.8892C66.0946 94.7498 75.3985 93.0928 80.9259 86.4446L81.748 85.4558C85.0087 81.534 86.3217 76.6372 85.7954 71.9397C95.8538 71.475 103.866 63.1731 103.866 52.9998V51.6455C103.866 49.6794 103.567 47.7832 103.011 46C99.8111 51.138 94.2207 54.633 87.7954 54.9299C88.3217 59.6274 87.0087 64.5242 83.748 68.446L82.9259 69.4348C77.3985 76.083 68.0946 77.74 60.7347 73.8794C60.4199 74.3384 60.0811 74.787 59.7182 75.2234L58.8961 76.2122C52.5398 83.8574 41.1893 84.9023 33.5441 78.5459C27.7013 73.6882 25.7136 65.9136 27.9382 59.1052C25.7251 60.0242 23.2978 60.5314 20.7521 60.5314C12.3773 60.5314 5.2847 55.0414 2.87708 47.4639Z'
            fill='#458244'
          />
        </svg>
      </div>
    </div>
  );
};

export default ProgressCircle;
